Calls.sol:18:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    address(0xcafe).send(16);
    ^----------------------^
Calls.sol:8:17: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function make(bytes memory what) public returns (uint) { return 0xc0ffee; }
                ^---------------^
Calls.sol:8:3: Warning: Function state mutability can be restricted to pure
  function make(bytes memory what) public returns (uint) { return 0xc0ffee; }
  ^-------------------------------------------------------------------------^

======= Calls.sol:Cafe =======
EVM assembly:
    /* "Calls.sol":25:407  contract Cafe { // at 0xcafe... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "Calls.sol":25:407  contract Cafe { // at 0xcafe... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "Calls.sol":25:407  contract Cafe { // at 0xcafe... */
      mstore(0x40, 0x80)

\\    ... CALLDATA
      0x00 |->af
      0x01 |->32
      0x02 |->5d
      0x03 |->a2
      0x04 ..0x23|->0x0000..0020
      0x24 ..0x43|->0x0000..0005
      0x44 |-> 6c //'l'
      0x45 |-> 61 //'a'
      0x46 |-> 74 //'t'
      0x47 |-> 74 //'t'
      0x48 |-> 65 //'e'
      0x49...0x63|-> 0x0000...00


      jumpi(tag_1, lt(calldatasize, 0x04))
      calldataload(0x00)
      0x0100000000000000000000000000000000000000000000000000000000
      swap1
      div
      dup1
      0xaf325da2 // function make
      eq
      tag_2
      jumpi // jump to tag2
    tag_1:
      stop
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
    tag_2:
      //callvalue is 0, jump to tag_5
      callvalue // 0
        /* "--CODEGEN--":8:17   */
      dup1 // 0 0 
        /* "--CODEGEN--":5:7   */
      iszero // 1 0
      tag_5 // tag_5 1 0
      jumpi  // 0 
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_5:
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      pop //* empty*
      tag_6 //tag_6
      0x04 // 4 tag_6
      dup1 // 4 4 tag_6
      calldatasize //0x64(=100) 4 4 tag_6
      sub          // 0x60 4 tag_6
        /* "--CODEGEN--":13:15   */
      0x20         // 0x20 0x60 4 tag_6
        /* "--CODEGEN--":8:11   */
      dup2         // 0x60 0x20 0x60 4 tag_6
        /* "--CODEGEN--":5:16   */
      lt           // 0 0x60 4 tag_6
        /* "--CODEGEN--":2:4   */
      iszero       //1 0x60 4 tag_6
      tag_7        // tag_7 1 0x60 4 tag_6
      jumpi        // 0x60 4 tag_6
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_7:
      // 0x60 4 tag_6
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      dup2 //4 0x60 4 tag_6
      add  // 0x64 4 tag_6
      swap1 //4 0x64 tag_6
      dup1
      dup1 //4 4 4 0x64_tag6
      //read the offset from calldata 
      calldataload // offset(=0x20) 4 4 0x64 tag_6
      swap1        // 4 offset 4 0x64 tag_6
      0x20         // 0x20 4 offset 4 0x64 tag_6
      add          // 0x24 offset 4 0x64 tag_6
      swap1        // offset 0x24 4 0x64 tag_6
        /* "--CODEGEN--":21:32   */
      0x0100000000 // 0x0100000000 offset 0x24 4 0x64 tag_6
        /* "--CODEGEN--":8:19   */
      dup2         // offset 0x0100000000 offset 0x24 4 0x64 tag_6
        /* "--CODEGEN--":5:33   */
      gt           // 0 offset 0x24 4 0x64 tag_6
        /* "--CODEGEN--":2:4   */
      iszero       // 1 offset 0x24 4 0x64 tag_6
      tag_8        //tag_8 1 offset 0x24 4 0x64 tag_6
      jumpi        //offset 0x24 4 0x64 tag_6
        /* "--CODEGEN--":46:47   */
      0x00
        /* "--CODEGEN--":43:44   */
      dup1
        /* "--CODEGEN--":36:48   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_8:
    //offset 0x24 4 0x64 tag_6
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      dup3 //4 offset(==0x20) 0x24 4 0x64 tag_6
      add  //0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":35:44   */
      dup4 //0x64 0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":28:32   */
      0x20 // 0x20 0x64 0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":12:26   */
      dup3 // 0x24 0x20 0x64 0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":8:33   */
      add  // 0x44 0x64 0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":5:45   */
      gt   // 0 0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":2:4   */
      iszero //1 0x24 0x24 4 0x64 tag_6
      tag_9 // tag_9 1 0x24 0x24 4 0x64 tag_6
      jumpi // 0x24 0x24 4 0x64 tag_6
        /* "--CODEGEN--":58:59   */
      0x00
        /* "--CODEGEN--":55:56   */
      dup1
        /* "--CODEGEN--":48:60   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_9:
    // 0x24 0x24 4 0x64 tag_6
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      dup1 // 0x24 0x24 0x24 4 0x64 tag_6
      calldataload //len(=0x05) 0x24 0x24 4 0x64 tag_6
      swap1        //0x24 len 0x024 4 0x64 tag_6
      0x20         //0x20 0x24 len 0x24 4 0x64 tag_6
      add          //0x44 len 0x24 4 0x64 tag_6
      swap2        //0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":100:109   */
      dup5         //0x64 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":95:96   */
      0x01         //0x01 0x64 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":81:93   */
      dup4         //len 0x01 0x64 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":77:97   */
      mul          //len 0x64 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":67:75   */
      dup5         //0x44 len(0x05) 0x64 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":63:98   */
      add          //0x49 0x64 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":60:110   */
      gt           // 0 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":39:50   */
      0x0100000000 // 0x0100000000 0 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":25:37   */
      dup4        // len 0x0100000000 0 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":22:51   */
      gt          // 0 0 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":11:118   */
      or          // 0 0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":8:10   */
      iszero      // 1 0x24 len 0x44 4 0x64 tag_6
      tag_10      // tag_10 1 0x24 len 0x44 4 0x64 tag_6
      jumpi       //0x24 len 0x44 4 0x64 tag_6
        /* "--CODEGEN--":131:132   */
      0x00
        /* "--CODEGEN--":128:129   */
      dup1
        /* "--CODEGEN--":121:133   */
      revert
        /* "--CODEGEN--":8:10   */
    tag_10:
    //0x24 len 0x44 4 0x64 tag_6
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      swap2 //0x44 len 0x24 4 0x64 tag_6
      swap1 // len 0x44 0x24 4 0x64 tag_6
      dup1  // len len 0x44 0x24 4 0x64 tag_6
      dup1  // len len len 0x44 0x24 4 0x64 tag_6
      0x1f  // 0x1f len(=0x05) len len 0x44 0x24 4 0x64 tag_6
      add   // 0x24 len len 0x44 0x24 4 0x64 tag_6
      0x20  // 0x20 0x24 len len 0x44 0x24 4 0x64 tag_6
      dup1  // 0x20 0x20 0x24 len len 0x44 0x24 4 0x64 tag_6
      swap2 // 0x24(=36) 0x20(=32) 0x20 len len 0x44 0x24 4 0x64 tag_6
      div   // 0x01 0x20 len len 0x44 0x24 4 0x64 tag_6
      mul   // 0x20 len len 0x44 0x24 4 0x64 tag_6
      0x20  // 0x20 0x20 len len 0x44 0x24 4 0x64 tag_6
      add   // 0x40 len len 0x44 0x24 4 0x64 tag_6
      mload(0x40) //0x80 0x40 len len 0x44 0x24 4 0x64 tag_6
      swap1 // 0x40 0x80 len len 0x44 0x24 4 0x64 tag_6
      dup2  // 0x80(128) 0x40(64) 0x80 len len 0x44 0x24 4 0x64 tag_6
      add   // 0xc0(192) 0x80 len len 0x44 0x24 4 0x64 tag_6
      0x40  // 0x40 0xc0(192) 0x80 len len 0x44 0x24 4 0x64 tag_6
      //store the next available location
      mstore// 0x80 len len 0x44 0x24 4 0x64 tag_6
      ...
      0x40..0x59 |->0xc0
      ...
      dup1  // 0x80 0x80 len len 0x44 0x24 4 0x64 tag_6
      swap4 // 0x44 0x80 len len 0x80 0x24 4 0x64 tag_6
      swap3 // len 0x80 len 0x44 0x80 0x24 4 0x64 tag_6
      swap2 // len 0x80 len 0x44 0x80 0x24 4 0x64 tag_6
      swap1 // 0x80 len len 0x44 0x80 0x24 4 0x64 tag_6
      dup2  // len 0x80 len len 0x44 0x80 0x24 4 0x64 tag_6
      dup2  // 0x80 len 0x80 len len 0x44 0x80 0x24 4 0x64 tag_6
      //store the len at 0x80
      mstore// 0x80 len len 0x44 0x80 0x24 4 0x64 tag_6
      0x40..0x59 |->0xc0
      ..
      0x80..0x99 |->len(=0x05)

      0x20 //0x20 0x80 len len 0x44 0x80 0x24 4 0x64 tag_6
      add  //0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      dup4 //0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      dup4 //len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":30:33   */
      dup1 //len len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":22:28   */
      dup3 //0x44 len len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":14:20   */
      dup5 //0xa0 0x44 len len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":1:34   */
      //calldatacopy(0xa0, 0x44, len(=0x05)) - copy 5 bytes from calldata at position 0x44 to mem at position 0xa0
      calldatacopy // len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      ...
      0x40..0x59 |->0xc0
      ..
      0x80..0x99 |->len(=0x05)
      ..
      0xa0..0xa4 |->"latte"
      ...

        /* "--CODEGEN--":99:100   */
      0x00 // 0 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":93:96   */
      dup2 // len 0 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":85:91   */
      dup5 // 0xa0 len 0 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":81:97   */
      add // 0xa5 0 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":74:101   */
      mstore // len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      ...
      0x40..0x59 |->0xc0
      ..
      0x80..0x99 |->len(=0x05)
      ..
      0xa0..0xa4 |->"latte"
      0xa5... |-> 0
      ...

        /* "--CODEGEN--":137:141   */
      0x1f //0x1f len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":133:142   */
      not  //0x00 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":126:130   */
      0x1f  //0x1f 0x00 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":121:124   */
      dup3  //len(0x05) 0x1f 0x00 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":117:131   */
      add   //0x24 0x00 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":113:143   */
      and   // 0x00 len 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":106:143   */
      swap1 // len 0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      pop   //0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":169:172   */
      dup1  // 0x00 0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":161:167   */
      dup4 // 0xa0 0x00 0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":157:173   */
      add  //0xa0 0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "--CODEGEN--":147:173   */
      swap3 //0xa0 0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      pop   //0x00 0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      pop   //0x44 0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      pop   //0xa0 len len 0x44 0x80 0x24 4 0x64 tag_6
      pop   //len len 0x44 0x80 0x24 4 0x64 tag_6
      pop   //len 0x44 0x80 0x24 4 0x64 tag_6
      pop   //0x44 0x80 0x24 4 0x64 tag_6
      pop   //0x80 0x24 4 0x64 tag_6
      swap2 //4 0x24 0x80 0x64 tag_6
      swap3 //0x64 0x24 0x80 4 tag_6
      swap2 //0x80 0x24 0x64 4 tag_6
      swap3 //4 0x24 0x64 0x80 tag_6
      swap1 //0x24 4 0x64 0x80 tag_6
      pop
      pop
      pop //0x80 tag_6
      tag_11 //tag_11 0x80 tag_6
      jump	// in
    tag_6:
      //0xc0ffee
      mload(0x40) //0xc0(nextAvailableLoc) 0xc0ffee
      dup1        //0xc0 0xc0 0xc0ffee
      dup3        //0xc0ffee 0xc0 0xc0 0xc0ffee
      dup2        //0xc0 0xc0ffee 0xc0 0xc0 0xc0ffee
      mstore      //0xc0 0xc0 0xc0ffee

      ...
      0x40..0x59 |->0xc0
      ..
      0x80..0x99 |->len(=0x05)
      ..
      0xa0..0xa4 |->"latte"
      0xa5... |-> 0
      ...
      0xc0|->c0
      0xc1|->ff
      0xc2|->ee
      ...

      0x20 //0x20 0xc0 0xc0 0xc0ffee
      add  //0xe0 0xc0 0xc0ffee
      swap2//0xc0ffee 0xc0 0xe0
      pop  //
      pop  // 0xe0
      mload(0x40)//0xc0 0xe0
      dup1 //0xc0 0xc0 0xe0
      swap2//0xe0 0xc0 0xc0
      sub  //0x20 0xc0
      swap1//0xc0 0x20
      return 
    tag_11:
      //0x80 tag_6
        /* "Calls.sol":345:349  uint */
      0x00 // 0 0x80 tag_6
        /* "Calls.sol":360:368  0xc0ffee */
      0xc0ffee // 0xc0ffee 0 0x80 tag_6
        /* "Calls.sol":353:368  return 0xc0ffee */
      swap1   // 0 0xc0ffee 0x80 tag_6
      pop     //0xc0ffee 0x80 tag_6
        /* "Calls.sol":296:371  function make(bytes memory what) public returns (uint) { return 0xc0ffee; } */
      swap2   //tag_6 0x80 0xc0ffee
      swap1   //0x80 tag_6 0xc0ffee
      pop     //tag_6 0xc0ffee
      jump	// out

    auxdata: 0xa165627a7a723058200bdc57107e9f0973c5d90586909b1c69887ab0e9889e161c4d7804ba5dadc7ad0029
}


======= Calls.sol:Person =======
EVM assembly:
    /* "Calls.sol":409:735  contract Person {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "Calls.sol":409:735  contract Person {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "Calls.sol":409:735  contract Person {... */
      mstore(0x40, 0x80)
      jumpi(tag_1, lt(calldatasize, 0x04))
      calldataload(0x00)
      0x0100000000000000000000000000000000000000000000000000000000
      swap1
      div
      dup1
      0x1d134704 //compare the function hash from calldataload with the hash of
                 //getCoffee()
      eq
      tag_2
      jumpi
      dup1
      0x6cee6d77
      eq
      tag_3
      jumpi
      dup1
      0xcbedbf5a
      eq
      tag_4
      jumpi
    tag_1:
      0x00
      dup1
      revert
        /* "Calls.sol":429:593  function getCoffee() public payable returns (uint) {... */
    tag_2:
      tag_5 //tag_5 
      tag_6 //tag_6 tag_5
      jump	// in 
    tag_5:
    //[sig|garbage]

      ...
      0x80 |->af
      0x81 |->32
      0x82 |->5d
      0x83 |->a2
      0x84 ..0xa3|->0x0000..0020
      0xa4 ..0xc3|->0x0000..0005
      0xc4 |-> 6c //'l'
      0xc5 |-> 61 //'a'
      0xc6 |-> 74 //'t'
      0xc7 |-> 74 //'t'
      0xc8 |-> 65 //'e'
      0xc9...0xe3|-> 0x0000...00

      mload(0x40) //0x80 [sig|garbage]
      dup1        //0x80 0x80 [sig|garbage]
      dup3        //[sig|garbage] 0x80 0x80 [sig|garbage]
      dup2        // 0x80 [sig|garbage] 0x80 0x80 [sig|garbage]
      //[sig|garbage] was previously read from the memory and now it's written at the same location
      //=> no change to the memory
      mstore      //0x80 0x80 [sig|garbage]
      0x20        //0x20 0x80 0x80 [sig|garbage]
      add         // 0xa0 0x80 0x80 [sig|garbage]
      swap2       //0x80 0x80 0xa0 [sig|garbage]
      pop
      pop         //0xa0 [sig|garbage]
      mload(0x40) //0x80 0xa0 [sig|garbage]
      dup1        //0x80 0x80 0xa0 [sig|garbage]
      swap2       //0xa0 0x80 0x80 [sig|garbage]
      sub         //0x20 0x80 [sig|garbage]
      swap1       //0x80 0x20 [sig|garbage]
      return      // [sig|garbage]
        /* "Calls.sol":662:733  function transferMoney() public {... */
    tag_3:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_7
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_7:
        /* "Calls.sol":662:733  function transferMoney() public {... */
      pop
      tag_8
      tag_9
      jump	// in
    tag_8:
      stop
        /* "Calls.sol":596:659  function sendMoney() public {... */
    tag_4:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_10
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_10:
        /* "Calls.sol":596:659  function sendMoney() public {... */
      pop
      tag_11
      tag_12
      jump	// in
    tag_11:
      stop
        /* "Calls.sol":429:593  function getCoffee() public payable returns (uint) {... */
    tag_6:
      //tag_5
        /* "Calls.sol":474:478  uint */
      0x00  //0 tag_5
        /* "Calls.sol":498:504  0xcafe */
      0xcafe // 0xcafe 0 tag_5
        /* "Calls.sol":493:510  Cafe(0xcafe).make */
      0xffffffffffffffffffffffffffffffffffffffff
      and    // 0xcafe 0 tag_5
      0xaf325da2 //function signature for function make
             // 0xaf325da2 0xcafe 0 tag_5
        /* "Calls.sol":493:519  Cafe(0xcafe).make("latte") */
      mload(0x40) // 0x80(next_available_location) 0xaf325da2 0xcafe 0 tag_5
      dup2        //0xaf325da2 0x80(next_available_location) 0xaf325da2 0xcafe 0 tag_5
      0xffffffff  
      and        //0xaf325da2 0x80(next_available_location) 0xaf325da2 0xcafe 0 tag_5
      0x0100000000000000000000000000000000000000000000000000000000 // 48 zeros
      mul        //0xaf325da200..0(//total len is 64) 0x80(next_available_location) 0xaf325da2 0xcafe 0 tag_5
      dup2       // 0x80 0xaf325da200..0(//total len is 64) 0x80 0xaf325da2 0xcafe 0 tag_5
      //mstore the signature
      mstore     // writes 32 bytes in memory at location 0x80
                 // 0x80 0xaf325da2 0xcafe 0 tag_5
      ...
      0x80 |->af
      0x81 |->32
      0x82 |->5d
      0x83 |->a2
      ...

      0x04       // 4 0x80 0xaf325da2 0xcafe 0 tag_5
      add        // 0x84 0xaf325da2 0xcafe 0 tag_5
      dup1       // 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      dup1       // 0x84 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      0x20       // 0x20 0x84 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      add        // 0xa4(//164) 0x84(//132) 0x84 0xaf325da2 0xcafe 0 tag_5
      dup3       // 0x84 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      dup2       // 0xa4(//164) 0x84(//132) 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      sub        // 0x20(32) 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      dup3       // 0x84 0x20(32) 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      //mstore the offset for the "what" argument
      mstore     // 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      ...
      0x80 |->af
      0x81 |->32
      0x82 |->5d
      0x83 |->a2
      0x84 ..0xa3|->0x0000..0020
      ...

      0x05 // 0x05 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      dup2 // 0xa4 0x05 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      //mstore the length of the argument
      mstore // 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      ...
      0x80 |->af
      0x81 |->32
      0x82 |->5d
      0x83 |->a2
      0x84 ..0xa3|->0x0000..0020
      0xa4 ..0xc3|->0x0000..0005
      ...
  
      0x20 // 0x20 0xa4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      add  // 0xc4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      dup1 // 0xc4 0xc4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      0x6c61747465000000000000000000000000000000000000000000000000000000 //"latte" padded with 0
      dup2 // 0xc4 0x6c61747465000000000000000000000000000000000000000000000000000000 0xc4 0xc4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      //mstore the argument
      mstore // 0xc4 0xc4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      ...
      0x80 |->af
      0x81 |->32
      0x82 |->5d
      0x83 |->a2
      0x84 ..0xa3|->0x0000..0020
      0xa4 ..0xc3|->0x0000..0005
      0xc4 |-> 6c //'l'
      0xc5 |-> 61 //'a'
      0xc6 |-> 74 //'t'
      0xc7 |-> 74 //'t'
      0xc8 |-> 65 //'e'
      0xc9...0xe3|-> 0x0000...00

      pop // 0xc4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      0x20 //0x20 0xc4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      add  //0xe4 0x84 0x84 0xaf325da2 0xcafe 0 tag_5
      swap2 //0x84 0x84 0xe4 0xaf325da2 0xcafe 0 tag_5
      pop
      pop  //0xe4 0xaf325da2 0xcafe 0 tag_5
      0x20 //0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      mload(0x40) // 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      dup1        // 0x80 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      dup4        // 0xe4(//228) 0x80(//128) 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      sub         // 0x64(//100) 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      dup2        // 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      0x00        // 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      dup8        // 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      dup1        // 0xcafe 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      //check if the contract address 0xcafe is valid by checking the size of the code at that address
      extcodesize // codeSize 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      iszero      // 0 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "--CODEGEN--":8:17   */
      dup1        // 0 0 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "--CODEGEN--":5:7   */
      iszero      //1 0 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      tag_14      //tag_14 1 0 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      jumpi       //0 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_14:
      //0 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "Calls.sol":493:519  Cafe(0xcafe).make("latte") */
      pop // 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5
      gas // availableGas 0xcafe 0x00 0x80 0x64 0x80 0x20 0xe4 0xaf325da2 0xcafe 0 tag_5 
      //call (gas, address, valueInWei, input, inputSize, output, outputSize) -> returns 0 or 1
      call // 1 0xe4 0xaf325da2 0xcafe 0 tag_5
      iszero //0 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "--CODEGEN--":8:17   */
      dup1   // 0 0 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "--CODEGEN--":5:7   */
      iszero // 1 0 0xe4 0xaf325da2 0xcafe 0 tag_5
      tag_15 //tag_15 1 0 0xe4 0xaf325da2 0xcafe 0 tag_5
      jumpi // 0 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_15:
      //0 0xe4 0xaf325da2 0xcafe 0 tag_5
        /* "Calls.sol":493:519  Cafe(0xcafe).make("latte") */
      pop
      pop
      pop
      pop //0 tag_5
      mload(0x40) //0x80 0 tag_5
      returndatasize //0x20 0x80 0 tag_5
        /* "--CODEGEN--":13:15   */
      0x20   //0x20 0x20 0x80 0 tag_5
        /* "--CODEGEN--":8:11   */
      dup2  //0x20 0x20 0x20 0x80 0 tag_5
        /* "--CODEGEN--":5:16   */
      lt    // 0 0x20 0x80 0 tag_5
        /* "--CODEGEN--":2:4   */
      iszero //1 0x20 0x80 0 tag_5
      tag_16 //tag_16 1 0x20 0x80 0 tag_5
      jumpi //0x20 0x80 0 tag_5
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_16:
      //  0x20 0x80 0 tag_5
        /* "Calls.sol":493:519  Cafe(0xcafe).make("latte") */
      dup2 // 0x80 0x20 0x80 0 tag_5
      add  // 0xa0 0x80 0 tag_5
      swap1// 0x80 0xa0 0 tag_5
      dup1  // 0x80 0x80 0xa0 0 tag_5
      dup1  // 0x80 0x80 0x80 0xa0 0 tag_5
      ...
      0x80 |->af
      0x81 |->32
      0x82 |->5d
      0x83 |->a2
      0x84 ..0xa3|->0x0000..0020
      0xa4 ..0xc3|->0x0000..0005
      0xc4 |-> 6c //'l'
      0xc5 |-> 61 //'a'
      0xc6 |-> 74 //'t'
      0xc7 |-> 74 //'t'
      0xc8 |-> 65 //'e'
      0xc9...0xe3|-> 0x0000...00

      mload // [sig|garbage] 0x80 0x80 0xa0 0 tag_5
      swap1 // 0x80 [sig|garbage] 0x80 0xa0 0 tag_5
      0x20  // 0x20 0x80 [sig|garbage] 0x80 0xa0 0 tag_5
      add   // 0xa0 [sig|garbage] 0x80 0xa0 0 tag_5
      swap1 // [sig|garbage] 0xa0 0x80 0xa0 0 tag_5
      swap3 // 0xa0 0xa0 0x80 [sig|garbage] 0 tag_5
      swap2 // 0x80 0xa0 0xa0 [sig|garbage] 0 tag_5
      swap1 // 0xa0 0x80 0xa0 [sig|garbage] 0 tag_5
      pop
      pop
      pop//[sig|garbage] 0 tag_5
        /* "Calls.sol":486:519  return Cafe(0xcafe).make("latte") */
      swap1 // 0 [sig|garbage] tag_5
      pop  //[sig|garbage] tag_5
        /* "Calls.sol":429:593  function getCoffee() public payable returns (uint) {... */
      swap1 //tag_5 [sig|garbage]
      jump	// out //[sig|garbage]
        /* "Calls.sol":662:733  function transferMoney() public {... */
    tag_9:
        /* "Calls.sol":708:714  0xcafe */
      0xcafe
        /* "Calls.sol":700:724  address(0xcafe).transfer */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "Calls.sol":700:728  address(0xcafe).transfer(16) */
      0x08fc
        /* "Calls.sol":725:727  16 */
      0x10
        /* "Calls.sol":700:728  address(0xcafe).transfer(16) */
      swap1
      dup2
      iszero
      mul
      swap1
      mload(0x40)
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      dup9
      dup9
      call
      swap4
      pop
      pop
      pop
      pop
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_18
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_18:
        /* "Calls.sol":700:728  address(0xcafe).transfer(16) */
      pop
        /* "Calls.sol":662:733  function transferMoney() public {... */
      jump	// out
        /* "Calls.sol":596:659  function sendMoney() public {... */
    tag_12:
        /* "Calls.sol":638:644  0xcafe */
      0xcafe
        /* "Calls.sol":630:650  address(0xcafe).send */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "Calls.sol":630:654  address(0xcafe).send(16) */
      0x08fc
        /* "Calls.sol":651:653  16 */
      0x10
        /* "Calls.sol":630:654  address(0xcafe).send(16) */
      swap1
      dup2
      iszero
      mul
      swap1
      mload(0x40)
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      dup9
      dup9
      call
      swap4
      pop
      pop
      pop
      pop
      pop
        /* "Calls.sol":596:659  function sendMoney() public {... */
      jump	// out

    auxdata: 0xa165627a7a72305820980c465834bb577da2c143ed11399bf881fa5cb7b3d8478d2919c6ba59b58a010029
}

